{"ast":null,"code":"const cropRequest = (url, image) => {\n  var data = new FormData();\n  data.append('file', image);\n  return new Promise((resolve, reject) => {\n    var req = new XMLHttpRequest();\n    req.open(\"POST\", url, true);\n    req.responseType = \"arraybuffer\";\n    var resp = null;\n    var failNon2xx;\n\n    req.onload = event => {\n      if (failNon2xx && (req.status < 200 || req.status >= 300)) {\n        reject({\n          request: req\n        });\n      } else {\n        resolve(new Blob([req.response], {\n          type: \"image/jpeg\"\n        }));\n      }\n    };\n\n    req.onerror = function () {\n      reject({\n        request: req\n      });\n    };\n\n    req.send(data);\n  });\n};\n\nexport default cropRequest;","map":{"version":3,"sources":["C:/Users/Maxim.Karpov/cypress/react/veriboy/src/utils/ApiHelper.js"],"names":["cropRequest","url","image","data","FormData","append","Promise","resolve","reject","req","XMLHttpRequest","open","responseType","resp","failNon2xx","onload","event","status","request","Blob","response","type","onerror","send"],"mappings":"AAEA,MAAMA,WAAW,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC5B,MAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoBH,KAApB;AACJ,SAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpC,QAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACID,IAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT,EAAiBV,GAAjB,EAAsB,IAAtB;AACAQ,IAAAA,GAAG,CAACG,YAAJ,GAAmB,aAAnB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,UAAJ;;AACAL,IAAAA,GAAG,CAACM,MAAJ,GAAcC,KAAD,IAAW;AAEpB,UAAIF,UAAU,KAAKL,GAAG,CAACQ,MAAJ,GAAa,GAAb,IAAoBR,GAAG,CAACQ,MAAJ,IAAc,GAAvC,CAAd,EAA2D;AAEvDT,QAAAA,MAAM,CAAC;AAACU,UAAAA,OAAO,EAAET;AAAV,SAAD,CAAN;AAGH,OALD,MAKO;AAEHF,QAAAA,OAAO,CAAC,IAAIY,IAAJ,CAAS,CAACV,GAAG,CAACW,QAAL,CAAT,EAAyB;AAACC,UAAAA,IAAI,EAAE;AAAP,SAAzB,CAAD,CAAP;AACH;AAIJ,KAdD;;AAeAZ,IAAAA,GAAG,CAACa,OAAJ,GAAc,YAAY;AACtBd,MAAAA,MAAM,CAAC;AAACU,QAAAA,OAAO,EAAET;AAAV,OAAD,CAAN;AACH,KAFD;;AAGAA,IAAAA,GAAG,CAACc,IAAJ,CAASpB,IAAT;AAGP,GA5BM,CAAP;AAgCH,CAnCD;;AAqCA,eAAeH,WAAf","sourcesContent":["\r\n\r\nconst cropRequest = (url, image) => {\r\n        var data = new FormData();\r\n        data.append('file', image);\r\n    return new Promise((resolve, reject) => {\r\n\r\n        var req = new XMLHttpRequest();\r\n            req.open(\"POST\", url, true);\r\n            req.responseType = \"arraybuffer\";\r\n            var resp = null;\r\n            var failNon2xx;\r\n            req.onload = (event) => {\r\n\r\n                if (failNon2xx && (req.status < 200 || req.status >= 300)) {\r\n\t\t\t \r\n                    reject({request: req});\r\n                    \r\n                    \r\n                } else {\r\n                    \r\n                    resolve(new Blob([req.response], {type: \"image/jpeg\"}));\r\n                }\r\n\r\n\r\n       \r\n            }\r\n            req.onerror = function () {\r\n                reject({request: req});\r\n            };\r\n            req.send(data);\r\n\r\n           \r\n    });\r\n\r\n    \r\n\r\n}\r\n\r\nexport default cropRequest;"]},"metadata":{},"sourceType":"module"}