{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim.Karpov\\\\cypress\\\\react\\\\veriboy\\\\src\\\\components\\\\world\\\\Flags.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport { useLoader } from 'react-three-fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Flags = props => {\n  var _s = $RefreshSig$();\n\n  var flags = [];\n\n  const Flag = props => {\n    _s();\n\n    const Tile = useLoader(TextureLoader, \"/flags.jpg\");\n    const ref = useRef();\n    useEffect(() => void ref.current.lookAt(new THREE.Vector3(0, 1, 0)), [ref.current]);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      receiveShadow: true,\n      rotation: [-Math.PI / 2, 0, 0],\n      position: props.position,\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [5, 5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: Tile,\n        attach: \"material\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  };\n\n  _s(Flag, \"uAl5lqL0zAX/lGtgPyJPBG6YvqM=\", false, function () {\n    return [useLoader];\n  });\n\n  for (let i = 0; i < 10; i++) {\n    flags.push( /*#__PURE__*/_jsxDEV(Flag, {\n      position: [5, -0.5, i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this));\n  }\n\n  return {\n    flags\n  };\n};\n\n_c = Flags;\nexport default Flags;\n\nvar _c;\n\n$RefreshReg$(_c, \"Flags\");","map":{"version":3,"sources":["C:/Users/Maxim.Karpov/cypress/react/veriboy/src/components/world/Flags.js"],"names":["React","useRef","useEffect","TextureLoader","useLoader","Flags","props","flags","Flag","Tile","ref","current","lookAt","THREE","Vector3","Math","PI","position","i","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,SAAQC,SAAR,QAAyB,mBAAzB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAEzB,MAAIC,KAAK,GAAG,EAAZ;;AAEC,QAAMC,IAAI,GAAIF,KAAD,IAAW;AAAA;;AACrB,UAAMG,IAAI,GAAGL,SAAS,CAACD,aAAD,EAAgB,YAAhB,CAAtB;AAEA,UAAMO,GAAG,GAAGT,MAAM,EAAlB;AACAC,IAAAA,SAAS,CAAC,MAAM,KAAKQ,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CAAmB,IAAIC,KAAK,CAACC,OAAV,CAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,CAAnB,CAAZ,EAA0D,CAACJ,GAAG,CAACC,OAAL,CAA1D,CAAT;AAGI,wBAAO;AAAM,MAAA,aAAa,MAAnB;AAAoB,MAAA,QAAQ,EAAE,CAAC,CAACI,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA9B;AAAoD,MAAA,QAAQ,EAAEV,KAAK,CAACW,QAApE;AAA8E,MAAA,GAAG,EAAEP,GAAnF;AAAA,8BACH;AAAqB,QAAA,MAAM,EAAC,UAA5B;AAAuC,QAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH;AAA7C;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAmB,QAAA,GAAG,EAAED,IAAxB;AAA8B,QAAA,MAAM,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIN,GAXD;;AAJwB,KAIlBD,IAJkB;AAAA,YAKRJ,SALQ;AAAA;;AAiBxB,OAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAC,EAAjB,EAAqBA,CAAC,EAAtB,EAA0B;AACtBX,IAAAA,KAAK,CAACY,IAAN,eAAW,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAC,GAAL,EAAUD,CAAV;AAAhB;AAAA;AAAA;AAAA;AAAA,YAAX;AACH;;AAEE,SACK;AAACX,IAAAA;AAAD,GADL;AAGH,CAxBD;;KAAMF,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React, {useRef, useEffect} from 'react'\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\r\nimport {useLoader } from 'react-three-fiber';\r\n\r\nconst Flags = (props) => {\r\n\r\nvar flags = [];\r\n\r\n const Flag = (props) => {\r\n    const Tile = useLoader(TextureLoader, \"/flags.jpg\");\r\n \r\n    const ref = useRef();\r\n    useEffect(() => void ref.current.lookAt(new THREE.Vector3(0,1,0)), [ref.current])\r\n    \r\n    \r\n        return(<mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={props.position} ref={ref}>\r\n            <planeBufferGeometry attach=\"geometry\" args={[5,5]} />\r\n            <meshBasicMaterial map={Tile} attach=\"material\" />\r\n        </mesh>)\r\n }\r\n\r\n for(let i = 0; i<10; i++) {\r\n     flags.push(<Flag position={[5, -0.5, i]}/>)\r\n }\r\n\r\n    return (\r\n         {flags}\r\n    )\r\n}\r\n\r\nexport default Flags\r\n"]},"metadata":{},"sourceType":"module"}