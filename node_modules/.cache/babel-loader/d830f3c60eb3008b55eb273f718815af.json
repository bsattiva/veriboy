{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maxim.Karpov\\\\cypress\\\\react\\\\veriboy\\\\src\\\\components\\\\world\\\\Grid.js\";\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from \"three\";\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\nimport grass from '../../textures/grass.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grid = props => {\n  var _s = $RefreshSig$();\n\n  const grids = [];\n  const face = [1, 0, 0];\n\n  const Square = props => {\n    _s();\n\n    const Grass = useLoader(TextureLoader, grass);\n    const ref = useRef();\n    useEffect(() => void ref.current.lookAt(new THREE.Vector3(0, 1, 0)), [ref.current]);\n    return /*#__PURE__*/_jsxDEV(\"mesh\", {\n      receiveShadow: true,\n      rotation: [-Math.PI / 2, 0, 0],\n      position: props.position,\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n        attach: \"geometry\",\n        args: [1, 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        map: Grass,\n        attach: \"material\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  };\n\n  _s(Square, \"CBlXugCPX95CTiDMTfhJSwCzGaE=\", true);\n\n  for (var i = 0; i < props.width; i++) {\n    for (var j = 0; j < props.length; j++) {\n      grids.push( /*#__PURE__*/_jsxDEV(Square, {\n        position: [i, -0.5, j]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: grids\n  }, void 0, false);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["C:/Users/Maxim.Karpov/cypress/react/veriboy/src/components/world/Grid.js"],"names":["React","useRef","useEffect","THREE","TextureLoader","grass","Grid","props","grids","face","Square","Grass","useLoader","ref","current","lookAt","Vector3","Math","PI","position","i","width","j","length","push"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,oCAA9B;AACA,OAAOC,KAAP,MAAkB,0BAAlB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,IAAI,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAb;;AAEA,QAAMC,MAAM,GAAIH,KAAD,IAAW;AAAA;;AACtB,UAAMI,KAAK,GAAGC,SAAS,CAACR,aAAD,EAAgBC,KAAhB,CAAvB;AAEJ,UAAMQ,GAAG,GAAGZ,MAAM,EAAlB;AACAC,IAAAA,SAAS,CAAC,MAAM,KAAKW,GAAG,CAACC,OAAJ,CAAYC,MAAZ,CAAmB,IAAIZ,KAAK,CAACa,OAAV,CAAkB,CAAlB,EAAoB,CAApB,EAAsB,CAAtB,CAAnB,CAAZ,EAA0D,CAACH,GAAG,CAACC,OAAL,CAA1D,CAAT;AAGI,wBAAO;AAAM,MAAA,aAAa,MAAnB;AAAoB,MAAA,QAAQ,EAAE,CAAC,CAACG,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA9B;AAAoD,MAAA,QAAQ,EAAEX,KAAK,CAACY,QAApE;AAA8E,MAAA,GAAG,EAAEN,GAAnF;AAAA,8BACH;AAAqB,QAAA,MAAM,EAAC,UAA5B;AAAuC,QAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH;AAA7C;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAmB,QAAA,GAAG,EAAEF,KAAxB;AAA+B,QAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH,GAXD;;AALwB,KAKlBD,MALkB;;AAmBxB,OAAI,IAAIU,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACb,KAAK,CAACc,KAAvB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAACf,KAAK,CAACgB,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjCd,MAAAA,KAAK,CAACgB,IAAN,eAAW,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACJ,CAAD,EAAG,CAAC,GAAJ,EAAQE,CAAR;AAAlB;AAAA;AAAA;AAAA;AAAA,cAAX;AACH;AACJ;;AAEG,sBACI;AAAA,cACGd;AADH,mBADJ;AAKH,CA9BD;;KAAMF,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, {useRef, useEffect} from 'react'\r\nimport * as THREE from \"three\";\r\nimport { TextureLoader } from 'three/src/loaders/TextureLoader.js';\r\nimport grass from '../../textures/grass.jpg'\r\n\r\nconst Grid = (props) => {\r\n\r\nconst grids = [];\r\nconst face = [1,0,0];\r\n\r\nconst Square = (props) => {\r\n    const Grass = useLoader(TextureLoader, grass);\r\n \r\nconst ref = useRef();\r\nuseEffect(() => void ref.current.lookAt(new THREE.Vector3(0,1,0)), [ref.current])\r\n\r\n\r\n    return(<mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={props.position} ref={ref}>\r\n        <planeBufferGeometry attach=\"geometry\" args={[1,1]} />\r\n        <meshBasicMaterial map={Grass} attach=\"material\" />\r\n    </mesh>)\r\n}\r\n\r\n\r\nfor(var i = 0; i<props.width; i++) {\r\n    for (var j = 0; j<props.length; j++) {\r\n        grids.push(<Square position={[i,-0.5,j]}/>)\r\n    }\r\n}\r\n\r\n    return (\r\n        <>\r\n          {grids}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Grid\r\n"]},"metadata":{},"sourceType":"module"}